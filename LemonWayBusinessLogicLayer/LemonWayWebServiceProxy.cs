//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="LemonWayWebServiceSoap", Namespace="http://tempuri.org/")]
public partial class LemonWayWebServiceProxy : System.Web.Services.Protocols.SoapHttpClientProtocol {
	
	private System.Threading.SendOrPostCallback FibonacciOperationCompleted;
	
	private System.Threading.SendOrPostCallback XmlToJsonOperationCompleted;
	
	/// <remarks/>
	public LemonWayWebServiceProxy() {
		this.Url = "http://localhost:40822/LemonWayWebService.asmx";
	}
	
	/// <remarks/>
	public event FibonacciCompletedEventHandler FibonacciCompleted;
	
	/// <remarks/>
	public event XmlToJsonCompletedEventHandler XmlToJsonCompleted;
	
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fibonacci", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string Fibonacci(int n) {
		object[] results = this.Invoke("Fibonacci", new object[] {
					n});
		return ((string)(results[0]));
	}
	
	/// <remarks/>
	public System.IAsyncResult BeginFibonacci(int n, System.AsyncCallback callback, object asyncState) {
		return this.BeginInvoke("Fibonacci", new object[] {
					n}, callback, asyncState);
	}
	
	/// <remarks/>
	public string EndFibonacci(System.IAsyncResult asyncResult) {
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}
	
	/// <remarks/>
	public void FibonacciAsync(int n) {
		this.FibonacciAsync(n, null);
	}
	
	/// <remarks/>
	public void FibonacciAsync(int n, object userState) {
		if ((this.FibonacciOperationCompleted == null)) {
			this.FibonacciOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFibonacciOperationCompleted);
		}
		this.InvokeAsync("Fibonacci", new object[] {
					n}, this.FibonacciOperationCompleted, userState);
	}
	
	private void OnFibonacciOperationCompleted(object arg) {
		if ((this.FibonacciCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.FibonacciCompleted(this, new FibonacciCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}
	
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XmlToJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string XmlToJson(string xml) {
		object[] results = this.Invoke("XmlToJson", new object[] {
					xml});
		return ((string)(results[0]));
	}
	
	/// <remarks/>
	public System.IAsyncResult BeginXmlToJson(string xml, System.AsyncCallback callback, object asyncState) {
		return this.BeginInvoke("XmlToJson", new object[] {
					xml}, callback, asyncState);
	}
	
	/// <remarks/>
	public string EndXmlToJson(System.IAsyncResult asyncResult) {
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}
	
	/// <remarks/>
	public void XmlToJsonAsync(string xml) {
		this.XmlToJsonAsync(xml, null);
	}
	
	/// <remarks/>
	public void XmlToJsonAsync(string xml, object userState) {
		if ((this.XmlToJsonOperationCompleted == null)) {
			this.XmlToJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXmlToJsonOperationCompleted);
		}
		this.InvokeAsync("XmlToJson", new object[] {
					xml}, this.XmlToJsonOperationCompleted, userState);
	}
	
	private void OnXmlToJsonOperationCompleted(object arg) {
		if ((this.XmlToJsonCompleted != null)) {
			System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
			this.XmlToJsonCompleted(this, new XmlToJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
		}
	}
	
	/// <remarks/>
	public new void CancelAsync(object userState) {
		base.CancelAsync(userState);
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void FibonacciCompletedEventHandler(object sender, FibonacciCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FibonacciCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
	
	private object[] results;
	
	internal FibonacciCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
			base(exception, cancelled, userState) {
		this.results = results;
	}
	
	/// <remarks/>
	public string Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((string)(this.results[0]));
		}
	}
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void XmlToJsonCompletedEventHandler(object sender, XmlToJsonCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class XmlToJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
	
	private object[] results;
	
	internal XmlToJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
			base(exception, cancelled, userState) {
		this.results = results;
	}
	
	/// <remarks/>
	public string Result {
		get {
			this.RaiseExceptionIfNecessary();
			return ((string)(this.results[0]));
		}
	}
}
